- add_to_javascripts "cancel_event", "form_helper", "permaname_generator"

:javascript
  document.observe("dom:loaded", function() {
    window.pg = new PermanameGenerator("category_form", "category", "name", "slug", {
      autoUpdatePermaname: #{@category.new_record? ? 'true' : 'false'},
      permanameLength: #{Category.slug_length}
    });
  })

- t_scope 'controllers.admin.categories.form' do
  - title(params[:action] =~ /new/ ? t(:create_new_category) : t(:editing_category))

  .center{ :style => 'width: 100%' }
    = error_messages_for :category
    
    - form_for [:admin, @category], :html => {:id => "category_form"} do |f|
      %table.form.center
        %tr
          %th= t(:name)
          %td
            = f.text_field :name, :size => 50, :maxlength => 200
            = text_area_tag 'decoded_slug', nil, :style => 'display: none;'
        %tr
          %th= t(:slug)
          %td
            = f.text_field :slug, :size => 50
            = f.boolean_check_box :autoupdate_slug
            = f.label :autoupdate_slug, t(:autofill_slug)
        - if !@categories.empty?
          %tr
            %th{ :style => 'vertical-align: top' }
              = t(:parent)
            %td
              = f.select :parent_id, nested_set_options(@categories) { |item| "&nbsp;&nbsp;&nbsp;" * item.level + h(item.name) }, :include_blank => true, :html_escape_text => false
          - if !@category.new_record?
            %tr
              %th &nbsp;
              %td{ :style => 'font-size: 75%;' }= t(:change_parent_notice)
        %tr
          %th= t(:privacy)
          %td
            = f.radio_button :privacy, 'O', (@privacy_allowed ? {} : { :disabled => true })
            %label{ :for => 'category_privacy_o' }= t(:public)
            = f.radio_button :privacy, 'C', (@privacy_allowed ? {} : { :disabled => true, :checked => true })
            %label{ :for => 'category_privacy_c' }= t(:private)
            - if !@privacy_allowed
              %tr
                %th &nbsp;
                %td{ :style => 'font-size: 75%;' }
                  = t(:privacy_options_disallowed)
                  = f.hidden_field :privacy
          
      %p.center
        - t_scope 'general.form' do
          = submit_tag t(:save), :name => 'save', :accesskey => 'S'
          &nbsp;
          = submit_tag t(:cancel), :name => 'cancel', :accesskey => 'C'
